[[master.yoda.provide/do!
  [[com.badlogic.gdx.Files
    clojure.gdx.files
    gdl.files/Files]
   [com.badlogic.gdx.files.FileHandle
    clojure.gdx.files.file-handle
    gdl.files.file-handle/FileHandle]
   [com.badlogic.gdx.Input
    clojure.gdx.input
    gdl.input/Input]
   [com.badlogic.gdx.utils.Disposable
    clojure.gdx.utils.disposable
    gdl.utils.disposable/Disposable]
   [com.badlogic.gdx.graphics.g2d.Batch
    clojure.gdx.graphics.g2d.batch
    gdl.graphics.g2d.batch/Batch]
   [com.badlogic.gdx.utils.viewport.Viewport
    clojure.gdx.utils.viewport
    gdl.graphics.viewport/Viewport]
   [com.badlogic.gdx.graphics.Texture
    clojure.gdx.graphics.texture
    gdl.graphics.texture/Texture]
   [com.badlogic.gdx.graphics.g2d.TextureRegion
    clojure.gdx.graphics.g2d.texture-region
    gdl.graphics.g2d.texture-region/TextureRegion]
   [com.badlogic.gdx.graphics.OrthographicCamera
    gdx.graphics.camera
    gdl.graphics.camera/Camera]
   [com.badlogic.gdx.scenes.scene2d.Actor
    gdx.ui.actor
    gdl.ui.actor/Actor]
   [com.badlogic.gdx.scenes.scene2d.Group
    gdx.ui.group
    gdl.ui.group/Group]
   [com.badlogic.gdx.scenes.scene2d.ui.Table
    gdx.ui.table
    gdl.ui.table/Table]
   [gdl.ui.CtxStage
    gdx.ui.stage
    gdl.ui.stage/Stage]
   [com.badlogic.gdx.scenes.scene2d.ui.Image
    gdx.ui.image
    gdl.ui.image/Image]
   [gdl.create.graphics.Graphics
    gdl.create.graphics.handle-draws
    gdl.graphics/DeclarativeDraws]

   [gdl.ui.CtxStage
    cdq.ui.stage
    cdq.ui/Stage]
   ]]

 [cdq.utils.multifn/add-methods! [{:required [cdq.effect/applicable?
                                              cdq.effect/handle]
                                   :optional [cdq.effect/useful?
                                              cdq.effect/render]}
                                  [[cdq.effects.audiovisual
                                    :effects/audiovisual]
                                   [cdq.effects.projectile
                                    :effects/projectile]
                                   [cdq.effects.sound
                                    :effects/sound]
                                   [cdq.effects.spawn
                                    :effects/spawn]
                                   [cdq.effects.target-all
                                    :effects/target-all]
                                   [cdq.effects.target-entity
                                    :effects/target-entity]
                                   [cdq.effects.target.audiovisual
                                    :effects.target/audiovisual]
                                   [cdq.effects.target.convert
                                    :effects.target/convert]
                                   [cdq.effects.target.damage
                                    :effects.target/damage]
                                   [cdq.effects.target.kill
                                    :effects.target/kill]
                                   [cdq.effects.target.melee-damage
                                    :effects.target/melee-damage]
                                   [cdq.effects.target.spiderweb
                                    :effects.target/spiderweb]
                                   [cdq.effects.target.stun
                                    :effects.target/stun]]]]

 [cdq.utils.multifn/add-methods! [{:required [cdq.ctx.tx-handler/do!]}
                                  [
                                   [cdq.tx.toggle-inventory-visible
                                    :tx/toggle-inventory-visible]
                                   [cdq.tx.show-message
                                    :tx/show-message]
                                   [cdq.tx.show-modal
                                    :tx/show-modal]
                                   [cdq.tx.sound
                                    :tx/sound]
                                   [cdq.tx.state-exit
                                    :tx/state-exit]
                                   [cdq.tx.state-enter
                                    :tx/state-enter]
                                   [cdq.tx.audiovisual
                                    :tx/audiovisual]
                                   [cdq.tx.spawn-alert
                                    :tx/spawn-alert]
                                   [cdq.tx.spawn-line
                                    :tx/spawn-line]
                                   [cdq.tx.deal-damage
                                    :tx/deal-damage]
                                   [cdq.tx.set-movement
                                    :tx/set-movement]
                                   [cdq.tx.move-entity
                                    :tx/move-entity]
                                   [cdq.tx.spawn-projectile
                                    :tx/spawn-projectile]
                                   [cdq.tx.spawn-effect
                                    :tx/spawn-effect]
                                   [cdq.tx.spawn-item
                                    :tx/spawn-item]
                                   [cdq.tx.spawn-creature
                                    :tx/spawn-creature]
                                   ]]]

 [master.yoda/dispatch
  [clojure.gdx.utils.shared-library-loader/operating-system
   {:mac [[gdl.lwjgl/set-glfw-library-name! "glfw_async"]
          [gdl.java.awt/set-taskbar-icon! "moon.png"]]}]]

 [gdx.backends.lwjgl.application/start!
  [{:title "Cyber Dungeon Quest"
    :windowed-mode {:width 1440 :height 900}
    :foreground-fps 60}
   {:create!
    [master.yoda/create!-reset!
     {:state-atom cdq.application/state
      :initial-context cdq.application.context/create
      :create-fns
      [[master.yoda/assoc*
        [:ctx/app
         [gdl.app/create {:schema [:map {:closed true}
                                   [:ctx/app :some]
                                   [:ctx/files :some]
                                   [:ctx/config :some]
                                   [:ctx/input :some]
                                   [:ctx/db :some]
                                   [:ctx/audio :some]
                                   [:ctx/stage :some]
                                   [:ctx/graphics :some]
                                   [:ctx/world :some]]}]]]
       gdl.create.gdx/do!
       [master.yoda/assoc*
        [:ctx/config
         [master.yoda/const*
          {:config/starting-world [cdq.level.from-tmx/create {:tmx-file "maps/vampire.tmx"
                                                              :start-position [32 71]}]
           :config/game-state-pipeline [cdq.game-state.ui/reset-stage!
                                        [cdq.game-state.create-world/do! [cdq.game-state.create-world/create-world]]
                                        cdq.game-state.spawn-player/do!
                                        cdq.game-state.spawn-enemies/do!]
           :cdq.ctx.game/ui-actors
           [[cdq.ui.dev-menu/create {:world-fns [[cdq.level.from-tmx/create {:tmx-file "maps/vampire.tmx"
                                                                             :start-position [32 71]}]
                                                 [cdq.level.uf-caves/create {:tile-size 48
                                                                             :texture "maps/uf_terrain.png"
                                                                             :spawn-rate 0.02
                                                                             :scaling 3
                                                                             :cave-size 200
                                                                             :cave-style :wide}]
                                                 [cdq.level.modules/create {:world/map-size 5,
                                                                            :world/max-area-level 3,
                                                                            :world/spawn-rate 0.05}]]
                                     ;icons, etc. , components ....
                                     :info "[W][A][S][D] - Move\n[I] - Inventory window\n[E] - Entity Info window\n[-]/[=] - Zoom\n[P]/[SPACE] - Unpause"}]
            [cdq.ui.action-bar/create {:id :action-bar}] ; padding.... !, etc.
            [cdq.ui.hp-mana-bar/create {:rahmen-file "images/rahmen.png"
                                        :rahmenw 150
                                        :rahmenh 26
                                        :hpcontent-file "images/hp.png"
                                        :manacontent-file "images/mana.png"
                                        :y-mana 80}] ; action-bar-icon-size

            [cdq.ui.windows/create
             {:id :windows
              :actors
              [[cdq.ui.windows.entity-info/create {:y 0}]
               [cdq.ui.windows.inventory/create
                {:title "Inventory"
                 :id :inventory-window
                 :visible? false
                 :state->clicked-inventory-cell
                 {:player-idle           cdq.entity.state.player-idle/clicked-inventory-cell
                  :player-item-on-cursor cdq.entity.state.player-item-on-cursor/clicked-cell}}]]}]
            [cdq.ui.player-state-draw/create
             {:state->draw-gui-view
              {:player-item-on-cursor
               cdq.entity.state.player-item-on-cursor/draw-gui-view}}]
            [cdq.ui.message/create {:duration-seconds 0.5
                                    :name "player-message"}]]
           :cdq.ctx.game/enemy-components {:entity/fsm {:fsm :fsms/npc
                                                        :initial-state :npc-sleeping}
                                           :entity/faction :evil}
           :cdq.ctx.game/player-props {:creature-id :creatures/vampire
                                       :components {:entity/fsm {:fsm :fsms/player
                                                                 :initial-state :player-idle}
                                                    :entity/faction :good
                                                    :entity/player? true
                                                    :entity/free-skill-points 3
                                                    :entity/clickable {:type :clickable/player}
                                                    :entity/click-distance-tiles 1.5}}
           :cdq.ctx.game/world {:content-grid-cell-size 16
                                :potential-field-factions-iterations {:good 15
                                                                      :evil 5}
                                :entity-components {:entity/animation
                                                    {:create cdq.entity.animation/create
                                                     :create! cdq.entity.animation/create!}
                                                    :entity/body
                                                    {:create cdq.entity.body/create}
                                                    :entity/delete-after-animation-stopped?
                                                    {:create! cdq.entity.delete-after-animation-stopped/create!}
                                                    :entity/delete-after-duration
                                                    {:create cdq.entity.delete-after-duration/create}
                                                    :entity/projectile-collision
                                                    {:create cdq.entity.projectile-collision/create}
                                                    :creature/stats
                                                    {:create cdq.entity.stats/create}
                                                    :entity/fsm
                                                    {:create! cdq.entity.fsm/create!}
                                                    :entity/inventory
                                                    {:create! cdq.entity.inventory/create!}
                                                    :entity/skills
                                                    {:create! cdq.entity.skills/create!}
                                                    :entity/destroy-audiovisual
                                                    {:destroy! cdq.entity.destroy-audiovisual/destroy!}}
                                :entity-states {:state->create {:active-skill cdq.entity.state.active-skill/create
                                                                :npc-moving cdq.entity.state.npc-moving/create
                                                                :player-item-on-cursor cdq.entity.state.player-item-on-cursor/create
                                                                :player-moving cdq.entity.state.player-moving/create
                                                                :stunned cdq.entity.state.stunned/create}
                                                :state->enter {:npc-dead cdq.entity.state.npc-dead/enter
                                                               :npc-moving cdq.entity.state.npc-moving/enter
                                                               :player-dead cdq.entity.state.player-dead/enter
                                                               :player-item-on-cursor cdq.entity.state.player-item-on-cursor/enter
                                                               :player-moving cdq.entity.state.player-moving/enter
                                                               :active-skill cdq.entity.state.active-skill/enter}
                                                :state->exit {:npc-moving cdq.entity.state.npc-moving/exit
                                                              :npc-sleeping cdq.entity.state.npc-sleeping/exit
                                                              :player-item-on-cursor cdq.entity.state.player-item-on-cursor/exit
                                                              :player-moving cdq.entity.state.player-moving/exit}}
                                }
           :effect-body-props {:width 0.5
                               :height 0.5
                               :z-order :z-order/effect}

           :sound-path-format "sounds/%s.wav"

           :controls {:zoom-in :minus
                      :zoom-out :equals
                      :unpause-once :p
                      :unpause-continously :space}

           ; TODO remove 'defmethods'
           ; TODO wiring for editor widgets also via some config
           ; TODO also 'do!' defmethods just wire -> see 'defmethod'...

           :requires [
                      cdq.ui.editor.widget.default
                      cdq.ui.editor.widget.edn
                      cdq.ui.editor.widget.string
                      cdq.ui.editor.widget.boolean
                      cdq.ui.editor.widget.enum
                      cdq.ui.editor.widget.sound
                      cdq.ui.editor.widget.one-to-one
                      cdq.ui.editor.widget.one-to-many
                      cdq.ui.editor.widget.image
                      cdq.ui.editor.widget.animation
                      cdq.ui.editor.widget.map
                      ]
           }
          ]]]
       [gdl.create.colors/do! [["PRETTY_NAME" [0.84 0.8 0.52 1]]]]
       [master.yoda/assoc*
        [:ctx/graphics
         [gdl.create.graphics/do!
          {:textures [gdl.assets/search {:folder "resources/"
                                         :extensions #{"png" "bmp"}}]
           :tile-size 48
           :ui-viewport    {:width 1440 :height 900}
           :world-viewport {:width 1440 :height 900}
           :cursor-path-format "cursors/%s.png"
           :cursors {:cursors/bag                   ["bag001"       [0   0]]
                     :cursors/black-x               ["black_x"      [0   0]]
                     :cursors/default               ["default"      [0   0]]
                     :cursors/denied                ["denied"       [16 16]]
                     :cursors/hand-before-grab      ["hand004"      [4  16]]
                     :cursors/hand-before-grab-gray ["hand004_gray" [4  16]]
                     :cursors/hand-grab             ["hand003"      [4  16]]
                     :cursors/move-window           ["move002"      [16 16]]
                     :cursors/no-skill-selected     ["denied003"    [0   0]]
                     :cursors/over-button           ["hand002"      [0   0]]
                     :cursors/sandclock             ["sandclock"    [16 16]]
                     :cursors/skill-not-usable      ["x007"         [0   0]]
                     :cursors/use-skill             ["pointer004"   [0   0]]
                     :cursors/walking               ["walking"      [16 16]]}
           :default-font {:file "fonts/exocet/films.EXL_____.ttf"
                          :params {:size 16
                                   :quality-scaling 2
                                   :enable-markup? true
                                   ; false, otherwise scaling to world-units not visible
                                   :use-integer-positions? false}}}]]]
       [master.yoda/assoc*
        [:ctx/stage
         [gdl.create.ui/do!
          {:skin-scale :x1}]]]
       [master.yoda/assoc*
        [:ctx/audio
         [gdl.create.audio/do!
          {:sounds [gdl.assets/search {:folder "resources/"
                                       :extensions #{"wav"}}]}]]]
       [master.yoda/assoc*
        [:ctx/db
         [cdq.create.db/do!
          {:schemas "schema.edn"
           :properties "properties.edn"}]]]
       [cdq.create.extend-protocols/do! cdq.ctx]
       cdq.ctx/reset-game-state!
       cdq.create.player-movement-vector/do!
       gdl.app/validate]}]
    :dispose! cdq.application/dispose!
    :render!
    [master.yoda/render-swap!
     {:state-atom cdq.application/state
      :render-fns
      [gdl.app/validate
       gdl.app/run-runnables!
       cdq.render.assoc-active-entities/do!
       cdq.render.set-camera-on-player/do!
       cdq.render.clear-screen/do!
       cdq.render.draw-world-map/do!
       [cdq.render.draw-on-world-viewport/do!
        [cdq.render.draw-on-world-viewport.draw-tile-grid/do!
         cdq.render.draw-on-world-viewport.draw-cell-debug/do!
         cdq.render.draw-on-world-viewport.render-entities/do!
         ; cdq.render.draw-on-world-viewport.geom-test/do!
         cdq.render.draw-on-world-viewport.highlight-mouseover-tile/do!]]
       cdq.render.stage/do!
       [cdq.render.set-cursor/do!
        {:state->cursor {:active-skill :cursors/sandclock
                         :player-dead :cursors/black-x
                         :player-idle cdq.ctx.interaction-state/->cursor
                         :player-item-on-cursor :cursors/hand-grab
                         :player-moving :cursors/walking
                         :stunned :cursors/denied}}]
       [cdq.render.player-state-handle-input/do!
        {:state->handle-input {:player-idle cdq.entity.state.player-idle/handle-input
                               :player-item-on-cursor cdq.entity.state.player-item-on-cursor/handle-input
                               :player-moving cdq.entity.state.player-moving/handle-input}}]
       cdq.render.update-mouseover-entity/do!
       [cdq.render.assoc-paused/do!
        {:pausing? true
         :state->pause-game? {:stunned false
                              :player-moving false
                              :player-item-on-cursor true
                              :player-idle true
                              :player-dead true
                              :active-skill false}}]
       [master.yoda/render-when-not
        [[:ctx/world :world/paused?]
         [cdq.render.update-time/do!
          cdq.render.update-potential-fields/do!
          [cdq.render.tick-entities/do!
           {:entity/alert-friendlies-after-duration cdq.entity.alert-friendlies-after-duration/tick!
            :entity/animation cdq.entity.animation/tick!
            :entity/delete-after-animation-stopped? cdq.entity.delete-after-animation-stopped/tick!
            :entity/delete-after-duration cdq.entity.delete-after-duration/tick!
            :entity/movement cdq.entity.movement/tick!
            :entity/projectile-collision cdq.entity.projectile-collision/tick!
            :entity/skills cdq.entity.skills/tick!
            :active-skill cdq.entity.state.active-skill/tick!
            :npc-idle cdq.entity.state.npc-idle/tick!
            :npc-moving cdq.entity.state.npc-moving/tick!
            :npc-sleeping cdq.entity.state.npc-sleeping/tick!
            :stunned cdq.entity.state.stunned/tick!
            :entity/string-effect cdq.entity.string-effect/tick!
            :entity/temp-modifier cdq.entity.temp-modifier/tick!}]]]]
       cdq.render.remove-destroyed-entities/do! ; do not pause as pickup item should be destroyed
       [cdq.render.camera-controls/do! {:zoom-speed 0.025}]
       [cdq.render.check-window-hotkeys/do! {:close-windows-key  :escape
                                             :toggle-inventory   :i
                                             :toggle-entity-info :e}]
       gdl.app/validate]}]
    :resize! cdq.application/resize!}]]]
