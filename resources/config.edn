
; -> libgdx & clojure => not clojure.gdx (thats the API only)
; => but for 'cdq' we create new abstractions (with only what we need) called 'gdl'

; => the context contains `:gdl/assets` which implements IFn passing a path to get an assets
; or gdl.assets/all-of-type with either :sound or :texture



; => TODO ui is not disposed - this is the VisUI skin and is global state there - so just define it in my context ?
; then it doesn't know its disposed ? omg ...
;:gdl.context/ui-skin (com.kotcrab.vis.ui.VisUI/getSkin)

; TODO tiled-map also dispose if new game state add
; this also if world restarts !!

; => the comments are the problem!

; separate concerns - create -> all the instances - rest of code w. protocols (also tiledmap drawer etc.)
; * draw
; * update

; TODO move to config
; pass only order of [create], [render]
; save in context too
; so can change rendering or updates during the game
; data doc/schema:

;:elapsed-time  "The elapsed in-game-time in seconds (not counting when game is paused)."
;:delta-time "The game logic update delta-time in ms."

; :So actually the big components cannot change
; e.g. each cursor is required !!! -> schema !
; what can change is only the last values, not the keys !

; TODO just 'config' and 'context'

; => this has to become _exactly_ the context like that

{

 ; always assoc :gdl/foo (cdq.foo/create ...) ... !

 ; TODO dispose/resize also manually ?
 ; -=> lwjgl3 is only pipelining


 ; actually I can change everything in a new level
 ; so every level could be a completely different game ?!
 ; 16 bit fantasy ... 16 bit scifi ... etc. .....

 :cdq.ui.windows/actors [cdq.ui.entity-info-window/create
                         cdq.widgets.inventory/create]
 }


; context:
#_[assets ; no dependencies
   db ; no dependencies
   graphics ; no dependencies
   stage ; requires graphics batch & ui-viewport.
   world] ; requires everything

; A simple game - a test for the world -
; just add verbs to it
; exploration
; e.g. 1. level open invnetory
; 2. level swap item -> success? -> next lvl !
