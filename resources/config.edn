{:clojure.gdx.backends.lwjgl/application {:title "Cyber Dungeon Quest"
                                          :windowed-mode {:width 1440
                                                          :height 900}
                                          :foreground-fps 60
                                          :mac-os {:glfw-async? true
                                                   :dock-icon "moon.png"}}
 :create!  clojure.application/create!
 :dispose! clojure.application/dispose!
 :render!  clojure.application/render!
 :resize!  clojure.application/resize!
 :create-fns [clojure.create.app/do!
              clojure.create.files/do!
              clojure.create.assets/do!
              clojure.create.input/do!
              clojure.create.db/do!
              clojure.create.graphics/do!
              clojure.create.world-unit-scale/do!
              clojure.create.viewport/ui
              clojure.create.viewport/world
              cdq.create.graphics/do!
              clojure.create.stage/do!
              clojure.create.ctx-extenders/do!
              clojure.create.game-state/do!
              clojure.create.player-movement-vector/do!
              ]
 :game-state-fns [clojure.game.actors/do!]
 :actor-create-fns [clojure.ui.dev-menu/create
                    clojure.ui.action-bar/create
                    clojure.ui.hp-mana-bar/create
                    clojure.ui.windows/create
                    clojure.ui.player-state-draw/create
                    clojure.ui.message/create]
 :render-fns [clojure.render.assoc-active-entities/do!
              clojure.render.set-camera-on-player/do!
              clojure.render.clear-screen/do!
              clojure.render.draw-world-map/do!
              clojure.render.draw-on-world-viewport/do!
              clojure.render.stage/do!
              clojure.render.player-state-handle-click/do!
              clojure.render.update-mouseover-entity/do!
              clojure.render.assoc-paused/do!
              clojure.render.update-time/do!
              clojure.render.update-potential-fields/do!
              clojure.render.tick-entities/do!
              clojure.render.remove-destroyed-entities/do!
              clojure.render.camera-controls/do!]
 :ui {:skin-scale :x1}
 :tile-size 48
 :ui-viewport {:width 1440
               :height 900}
 :db {:schemas "schema.edn"
      :properties "properties.edn"}
 :assets {:folder "resources/"
          :asset-type-extensions {:sound   #{"wav"}
                                  :texture #{"png" "bmp"}}}
 :cursor-path-format "cursors/%s.png"
 :cursors {:cursors/bag                   ["bag001"       [0   0]]
           :cursors/black-x               ["black_x"      [0   0]]
           :cursors/default               ["default"      [0   0]]
           :cursors/denied                ["denied"       [16 16]]
           :cursors/hand-before-grab      ["hand004"      [4  16]]
           :cursors/hand-before-grab-gray ["hand004_gray" [4  16]]
           :cursors/hand-grab             ["hand003"      [4  16]]
           :cursors/move-window           ["move002"      [16 16]]
           :cursors/no-skill-selected     ["denied003"    [0   0]]
           :cursors/over-button           ["hand002"      [0   0]]
           :cursors/sandclock             ["sandclock"    [16 16]]
           :cursors/skill-not-usable      ["x007"         [0   0]]
           :cursors/use-skill             ["pointer004"   [0   0]]
           :cursors/walking               ["walking"      [16 16]]}
 :default-font {:file "fonts/exocet/films.EXL_____.ttf"
                :size 16
                :quality-scaling 2}
 :world-viewport {:width 1440
                  :height 900}
 :world-fn clojure.level.vampire/create
 :content-grid-cell-size 16
 :player-props {:creature-id :creatures/vampire
                :free-skill-points 3
                :click-distance-tiles 1.5}
 :effect-body-props {:width 0.5
                     :height 0.5
                     :z-order :z-order/effect}
 :sound-path-format "sounds/%s.wav"
 :controls {:zoom-in :minus
            :zoom-out :equals
            :unpause-once :p
            :unpause-continously :space}
 :pausing? true
 :zoom-speed 0.025
 :content-grid-cells-size 16
 :potential-field-factions-iterations {:good 15
                                       :evil 5}
 :world-fns [clojure.level.vampire/create
             clojure.level.uf-caves/create
             clojure.level.modules/create]
 :info "[W][A][S][D] - Move\n[I] - Inventory window\n[E] - Entity Info window\n[-]/[=] - Zoom\n[P]/[SPACE] - Unpause"
 :requires [
            clojure.schemas-impl

            clojure.effects.target.audiovisual
            clojure.effects.target.convert
            clojure.effects.target.damage
            clojure.effects.target.kill
            clojure.effects.target.melee-damage
            clojure.effects.target.spiderweb
            clojure.effects.target.stun

            clojure.effects.audiovisual
            clojure.effects.projectile
            clojure.effects.sound
            clojure.effects.spawn
            clojure.effects.target-all
            clojure.effects.target-entity

            clojure.entity.state.active-skill
            clojure.entity.state.npc-dead
            clojure.entity.state.npc-idle
            clojure.entity.state.npc-moving
            clojure.entity.state.npc-sleeping
            clojure.entity.state.player-dead
            clojure.entity.state.player-idle
            clojure.entity.state.player-item-on-cursor
            clojure.entity.state.player-moving
            clojure.entity.state.stunned

            clojure.entity.alert-friendlies-after-duration
            clojure.entity.animation
            clojure.entity.clickable
            clojure.entity.delete-after-animation-stopped
            clojure.entity.delete-after-duration
            clojure.entity.destroy-audiovisual
            clojure.entity.fsm
            clojure.entity.hp
            clojure.entity.image
            clojure.entity.inventory
            clojure.entity.line-render
            clojure.entity.mana
            clojure.entity.mouseover
            clojure.entity.movement
            clojure.entity.projectile-collision
            clojure.entity.skills
            clojure.entity.string-effect
            clojure.entity.temp-modifier

            clojure.ui.editor.widget.default
            clojure.ui.editor.widget.edn
            clojure.ui.editor.widget.string
            clojure.ui.editor.widget.boolean
            clojure.ui.editor.widget.enum
            clojure.ui.editor.widget.sound
            clojure.ui.editor.widget.one-to-one
            clojure.ui.editor.widget.one-to-many
            clojure.ui.editor.widget.image
            clojure.ui.editor.widget.animation
            clojure.ui.editor.widget.map

            clojure.tx.add-skill
            clojure.tx.add-text-effect
            clojure.tx.assoc
            clojure.tx.assoc-in
            clojure.tx.audiovisual
            clojure.tx.dissoc
            clojure.tx.effect
            clojure.tx.event
            clojure.tx.mark-destroyed
            clojure.tx.mod-add
            clojure.tx.mod-remove
            clojure.tx.move-entity
            clojure.tx.pay-mana-cost
            clojure.tx.pickup-item
            clojure.tx.remove-item
            clojure.tx.remove-one-item
            clojure.tx.remove-skill
            clojure.tx.set-cooldown
            clojure.tx.set-cursor
            clojure.tx.set-item
            clojure.tx.set-movement
            clojure.tx.show-message
            clojure.tx.show-modal
            clojure.tx.sound
            clojure.tx.spawn-alert
            clojure.tx.spawn-creature
            clojure.tx.spawn-effect
            clojure.tx.spawn-item
            clojure.tx.spawn-line
            clojure.tx.spawn-projectile
            clojure.tx.stack-item
            clojure.tx.toggle-inventory-visible
            clojure.tx.update-animation
            ]
 }
