
; -> libgdx & clojure => not clojure.gdx (thats the API only)
; => but for 'cdq' we create new abstractions (with only what we need) called 'gdl'

; => the context contains `:gdl/assets` which implements IFn passing a path to get an assets
; or gdl.assets/all-of-type with either :sound or :texture



; => TODO ui is not disposed - this is the VisUI skin and is global state there - so just define it in my context ?
; then it doesn't know its disposed ? omg ...
;:gdl.context/ui-skin (com.kotcrab.vis.ui.VisUI/getSkin)

; TODO tiled-map also dispose if new game state add
; this also if world restarts !!

; => the comments are the problem!

; separate concerns - create -> all the instances - rest of code w. protocols (also tiledmap drawer etc.)
; * draw
; * update

; TODO move to config
; pass only order of [create], [render]
; save in context too
; so can change rendering or updates during the game
; data doc/schema:

;:elapsed-time  "The elapsed in-game-time in seconds (not counting when game is paused)."
;:delta-time "The game logic update delta-time in ms."

; :So actually the big components cannot change
; e.g. each cursor is required !!! -> schema !
; what can change is only the last values, not the keys !

; TODO just 'config' and 'context'

; => this has to become _exactly_ the context like that

{:icon "moon.png"

 :title "Forge"
 :fps 60
 :width 1440
 :height 900

 :log-dispose-lifecycle? true
 :log-resize-lifecycle? true

 ; always assoc :gdl/foo (cdq.foo/create ...) ... !

 ; TODO dispose/resize also manually ?
 ; -=> lwjgl3 is only pipelining


 ; actually I can change everything in a new level
 ; so every level could be a completely different game ?!
 ; 16 bit fantasy ... 16 bit scifi ... etc. .....
 :create-fns [[:gdl.db/schemas [gdl.context/load-schemas]]
              [:gdl/db [cdq.db/create {:schema "schema.edn"
                                       :properties "properties.edn"}]]
              ; ah ok ! gdl.context is not loaded yet at this point
              ; so :s/map is not available
              [:gdl/assets [cdq.assets/create {:folder "resources/"
                                               :type-exts {:sound   #{"wav"}
                                                           :texture #{"png" "bmp"}}}]]
              [:gdl.graphics/batch [cdq.graphics.batch/create]]
              [:gdl.graphics/shape-drawer-texture [cdq.graphics.shape-drawer-texture/create]]
              [:gdl.graphics/shape-drawer [cdq.graphics.shape-drawer/create]]
              [:gdl.graphics/cursors [cdq.graphics.cursors/create {:cursors/bag                   ["bag001"       [0   0]]
                                                                   :cursors/black-x               ["black_x"      [0   0]]
                                                                   :cursors/default               ["default"      [0   0]]
                                                                   :cursors/denied                ["denied"       [16 16]]
                                                                   :cursors/hand-before-grab      ["hand004"      [4  16]]
                                                                   :cursors/hand-before-grab-gray ["hand004_gray" [4  16]]
                                                                   :cursors/hand-grab             ["hand003"      [4  16]]
                                                                   :cursors/move-window           ["move002"      [16 16]]
                                                                   :cursors/no-skill-selected     ["denied003"    [0   0]]
                                                                   :cursors/over-button           ["hand002"      [0   0]]
                                                                   :cursors/sandclock             ["sandclock"    [16 16]]
                                                                   :cursors/skill-not-usable      ["x007"         [0   0]]
                                                                   :cursors/use-skill             ["pointer004"   [0   0]]
                                                                   :cursors/walking               ["walking"      [16 16]]}]]
              [:gdl.graphics/default-font [cdq.graphics.default-font/create {:file "fonts/exocet/films.EXL_____.ttf"
                                                                             :size 16
                                                                             :quality-scaling 2}]]
              [:gdl.graphics/world-unit-scale [cdq.graphics.world-unit-scale/create 48]]
              [:gdl.graphics/tiled-map-renderer [cdq.graphics.tiled-map-renderer/create]]
              [:gdl.graphics/ui-viewport [cdq.graphics.ui-viewport/create {:width 1440
                                                                           :height 900}]]
              [:gdl.graphics/world-viewport [cdq.graphics.world-viewport/create {:width 1440
                                                                                 :height 900}]]
              [:gdl.context/stage [gdl.ui/setup-stage! {:skin-scale :x1
                                                        :actors [cdq.ui.dev-menu/create
                                                                 cdq.ui.actionbar/create
                                                                 cdq.ui.hp-mana-bar/create
                                                                 cdq.ui.windows/create
                                                                 cdq.ui.player-state/create
                                                                 cdq.ui.player-message/create]}]]
              [:gdl.context/elapsed-time [cdq.time/create]]
              [:cdq.context/player-message [cdq.ui.player-message/create* {:duration-seconds 1.5}]]
              [:cdq.context/level [cdq.level/create :worlds/uf-caves]]
              [:cdq.context/error [cdq.create/error*]]
              [:cdq.context/tiled-map [cdq.create/tiled-map*]]
              [:cdq.context/explored-tile-corners [cdq.create/explored-tile-corners*]]
              [:cdq.context/grid [cdq.create/grid*]]
              [:cdq.context/raycaster [cdq.create/create-raycaster]]
              [:cdq.context/content-grid [cdq.create/content-grid* {:cell-size 16}]]
              [:cdq.context/entity-ids [cdq.create/entity-ids*]]
              [:cdq.context/factions-iterations [cdq.create/factions-iterations* {:good 15 :evil 5}]]
              [:cdq.context/player-eid [cdq.create/player-eid*]]
              [:cdq.context/enemies [cdq.create/spawn-enemies!]]]

 :cdq.ui.windows/actors [cdq.ui.entity-info-window/create
                         cdq.widgets.inventory/create]

 :render-fns [cdq.render/set-camera-on-player!
              gdl.graphics/clear-screen
              cdq.graphics.tiled-map/render
              cdq.graphics/draw-world-view
              gdl.graphics/draw-stage

              ; updates
              gdl.context/update-stage
              cdq.context/handle-player-input
              cdq.context/update-mouseover-entity
              cdq.context/update-paused-state
              cdq.context/progress-time-if-not-paused
              cdq.context/remove-destroyed-entities  ; do not pause this as for example pickup item, should be destroyed.
              gdl.context/check-camera-controls
              cdq.context/check-ui-key-listeners]
 }


; context:
#_[assets ; no dependencies
   db ; no dependencies
   graphics ; no dependencies
   stage ; requires graphics batch & ui-viewport.
   world] ; requires everything

; A simple game - a test for the world -
; just add verbs to it
; exploration
; e.g. 1. level open invnetory
; 2. level swap item -> success? -> next lvl !
