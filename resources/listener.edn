{:create [[clojure.decl/assoc* :ctx/gdx (clojure.gdx/state)]
          [cdq.create.input/do!]
          [cdq.create.vis-ui/do! {:skin-scale :x1}]
          [cdq.create.graphics/do! #edn/resource "graphics.edn"]
          [cdq.create.stage/do!]
          [cdq.create.set-input-processor/do!]
          [cdq.create.audio/do! {:sound-names #edn/resource "sounds.edn"
                                 :path-format "sounds/%s.wav"}]
          [clojure.core/dissoc :ctx/gdx]
          [clojure.core/assoc :ctx/ui-actors #edn/resource "ui_actors.edn"]
          [cdq.create.reset-stage/do!]
          [cdq.create.world-config/do!]
          [cdq.create.world/do! [cdq.world-fns.tmx/create {:tmx-file "maps/vampire.tmx"
                                                           :start-position [32 71]}]]]
 :render  [[cdq.render.validate/do!]
           [cdq.render.update-mouse/do!]
           [cdq.render.update-mouseover-eid/do!]
           [cdq.render.check-open-debug/do!]
           [cdq.render.assoc-active-entities/do!]
           [cdq.render.set-camera-on-player/do!]
           [cdq.render.clear-screen/do!]
           [cdq.render.draw-world-map/do!]
           [cdq.render.draw-on-world-viewport/do! [
                                                   cdq.draw-on-world-viewport.tile-grid/do!
                                                   cdq.draw-on-world-viewport.cell-debug/do!
                                                   cdq.draw-on-world-viewport.entities/do!
                                                   ;cdq.draw-on-world-viewport.geom-test/do!
                                                   cdq.draw-on-world-viewport.highlight-mouseover-tile/do!
                                                   ]]
           [cdq.render.stage/do!]
           [cdq.render.assoc-interaction-state/do!]
           [cdq.render.set-cursor/do!]
           [cdq.render.player-state-handle-input/do!]
           [cdq.render.assoc-paused/do!]
           [cdq.render.update-time/do!]
           [cdq.render.update-potential-fields/do!]
           [cdq.render.tick-entities/do!]
           [cdq.render.remove-destroyed-entities/do!] ; do not pause as pickup item should be destroyed
           [cdq.render.handle-key-input/do!]
           [clojure.core/dissoc
            :ctx/mouseover-actor
            :ctx/ui-mouse-position
            :ctx/world-mouse-position
            :ctx/interaction-state]
           [cdq.render.validate/do!]]
 :dispose cdq.gdx-app.dispose/do!
 :resize  cdq.gdx-app.resize/do!
 :atom-var cdq.application/state}
