[
 (cdq.start.context-record/do!)
 (clojure.decl/assoc* :ctx/schema (malli.core/schema [:map {:closed true}
                                                      [:ctx/audio :some]
                                                      [:ctx/editor :some]
                                                      [:ctx/db :some]
                                                      [:ctx/graphics :some]
                                                      [:ctx/input :some]
                                                      [:ctx/controls :some]
                                                      [:ctx/stage :some]
                                                      [:ctx/vis-ui :some]
                                                      [:ctx/ui-actors :some]
                                                      [:ctx/world :some]
                                                      [:ctx/info :some]
                                                      [:ctx/schema :some]
                                                      [:ctx/mouseover-actor :any]
                                                      [:ctx/ui-mouse-position :some]
                                                      [:ctx/world-mouse-position :some]
                                                      [:ctx/interaction-state :some]]))
 (clojure.core/assoc :ctx/editor #edn/resource "editor.edn")
 (cdq.ui.editor.window/init!)
 (clojure.core/assoc
  :ctx/mouseover-actor nil
  :ctx/ui-mouse-position true
  :ctx/world-mouse-position true
  :ctx/interaction-state true)
 (clojure.decl/assoc* :ctx/db (cdq.impl.db/create {:schemas "schema.edn"
                                                   :properties "properties.edn"}))
 (clojure.core/assoc :ctx/info #edn/resource "info.edn")
 (cdq.start.txs/do! #edn/resource "txs.edn")
 (cdq.start.load-entity-components/do! #edn/resource "entity_components.edn")
 (cdq.start.load-entity-states/do!     #edn/resource "entity_states.edn")
 (cdq.start.load-effects/do!           #edn/resource "effects_fn_map.edn")
 (clojure.core/assoc :ctx/controls {:zoom-in :minus
                                    :zoom-out :equals
                                    :unpause-once :p
                                    :unpause-continously :space})
 (cdq.create.input/do!)
 (cdq.create.vis-ui/do! {:skin-scale :x1})
 (cdq.create.graphics/do! #edn/resource "graphics.edn")
 (cdq.create.stage/do! {:state-var cdq.application/state
                        :stage-impl com.badlogic.gdx.scenes.scene2d.stage/create})
 (cdq.create.set-input-processor/do!)
 (cdq.create.audio/do! {:sound-names #edn/resource "sounds.edn"
                        :path-format "sounds/%s.wav"})
 (clojure.core/dissoc :ctx/files)
 (clojure.core/assoc :ctx/ui-actors #edn/resource "ui_actors.edn")
 (cdq.create.reset-stage/do!)
 (cdq.create.world-config/do!)
 (cdq.create.world/do! (cdq.world-fns.tmx/create {:tmx-file "maps/vampire.tmx"
                                                  :start-position [32 71]}))]
